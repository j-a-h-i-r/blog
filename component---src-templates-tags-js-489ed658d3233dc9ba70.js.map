{"version":3,"sources":["webpack://blog/./src/templates/tags.js"],"names":["pageContext","data","console","log","siteTitle","site","siteMetadata","title","tag","allMarkdownRemark","edges","totalCount","tagHeader","location","map","node","slug","fields","frontmatter","key","Link","to"],"mappings":"oJAsEA,UA7Da,SAAC,GAA2B,IAAD,EAAxBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC3BC,QAAQC,IAAI,OAAQF,GAEpB,IAAMG,GAAY,UAAAH,EAAKI,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAQR,EAARQ,IACR,EAA8BP,EAAKQ,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,gBAAC,IAAD,CAAQK,SAAU,IAAKN,MAAOH,GAC5B,gBAAC,IAAD,CAAKG,MAAM,aAEX,2BACE,0BAAKK,GACL,0BACGF,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAT,EAAUQ,EAAKG,YAAfX,MACR,OACE,sBAAIY,IAAKH,GACP,gBAAC,EAAAI,KAAD,CAAMC,GAAIL,GAAOT,QAKzB,gBAAC,EAAAa,KAAD,CAAMC,GAAG,SAAT","file":"component---src-templates-tags-js-489ed658d3233dc9ba70.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\n\nconst Tags = ({ pageContext, data }) => {\n  console.log(\"data\", data)\n\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout location={\"/\"} title={siteTitle}>\n      <Seo title=\"All tags\" />\n\n      <div>\n        <h1>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n        <Link to=\"/tags\">All tags</Link>\n      </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string,\n      }),\n    }),\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}